{
  "version": 3,
  "sources": ["../src/index.ts", "../src/vnode.ts", "../src/h.ts", "../src/renderer.ts"],
  "sourcesContent": ["export { h } from './h'\nexport { render } from './renderer'", "import { ShapeFlags } from \"packages/shared/src/shapeFlags\";\n\nexport function isSameVnode(n1, n2) {\n    return n1.type === n2.type && n1.key === n2.key\n}\n\nexport function createVNode(type, props?, children?) {\n    const vnode = {\n        el: null,\n        component: null,\n        key: props?.key,\n        type,\n        props: props || {},\n        children,\n        shapeFlag: ShapeFlags.ELEMENT,\n    };\n\n    // \u57FA\u4E8E children \u518D\u6B21\u8BBE\u7F6E shapeFlag\n    if (Array.isArray(children)) {\n        vnode.shapeFlag |= ShapeFlags.ARRAY_CHILDREN; // \u5D4C\u5957\u8282\u70B9\n    } else if (typeof children === \"string\") {\n        vnode.shapeFlag |= ShapeFlags.TEXT_CHILDREN; // \u6587\u4EF6\u8282\u70B9\n    }\n\n    return vnode\n}", "import { createVNode } from \"./vnode\";\n\nexport function h(type, props?, children?) {\n    return createVNode(type, props, children)\n}", "import { ShapeFlags } from \"../../shared/src/shapeFlags\";\nimport { isSameVnode } from './vnode'\n\nfunction hostCreateElement(type) {\n    const element = document.createElement(type);\n    return element;\n}\n\nfunction hostSetElementText(el, text) {\n    el.textContent = text\n}\n\nfunction hostInsert(child, parent, anchor = null) {\n    parent.insertBefore(child, anchor);\n}\n\nfunction hostPatchProp(el, key, preValue, nextValue) {\n    if (nextValue === null || nextValue === \"\") {\n        el.removeAttribute(key);\n    } else {\n        el.setAttribute(key, nextValue);\n    }\n}\n\nfunction hostRemove(child) {\n    const parent = child.parentNode;\n    if (parent) {\n        parent.removeChild(child);\n    }\n}\n\nfunction unmount(vnode) {\n    hostRemove(vnode.el)\n}\n\nexport const render = (vnode, container) => {\n\n\n    if (vnode === null) {\n        // \u5378\u8F7D\u903B\u8F91\n        if (container._vnode) {\n            unmount(container._vnode)\n        }\n    } else {\n        // \u521D\u59CB\u6E32\u67D3\uFF0C\u66F4\u65B0\u903B\u8F91\n        patch(container._vnode || null, vnode, container)\n    }\n    container._vnode = vnode\n}\n\nfunction patch(n1, n2, container = null, anchor = null) {\n    if (n1 === n2) return; // \u5B8C\u5168\u76F8\u540C\u65E0\u9700\u6BD4\u5BF9\n\n    // \u5904\u7406\u4E0D\u662F\u76F8\u540C\u8282\u70B9\u7684\u60C5\u51B5\n    if (n1 && !isSameVnode(n1, n2)) {\n        unmount(n1) // \u5220\u9664 n1\n        n1 = null // n1 \u7B49\u4E8E null \u5C31\u76F4\u63A5\u6302\u8F7D n2 \u4E0A\u53BB\n    }\n\n    const { type, shapeFlag } = n2\n\n    switch (type) {\n        default:\n            if (shapeFlag & ShapeFlags.ELEMENT) {\n                processElement(n1, n2, container, anchor)\n            }\n    }\n}\n\nfunction processElement(n1, n2, container, anchor) {\n    if (!n1) {\n        mountElement(n2, container, anchor) // \u521D\u6B21\u6E32\u67D3,\u76F4\u63A5\u6302\u8F7D\n    } else {\n        updateElement(n1, n2) // \u76F8\u540C\u8282\u70B9\u6BD4\u5BF9\n    }\n}\n\nfunction mountElement(vnode, container, anchor) {\n    const { shapeFlag, props } = vnode\n\n    // \u521B\u5EFA element\n    const el = (vnode.el = hostCreateElement(vnode.type));\n\n    // \u5904\u7406\u6587\u672C\u8282\u70B9\n    if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\n        hostSetElementText(el, vnode.children);\n    } else if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) { // \u5904\u7406\u5D4C\u5957\u8282\u70B9\n        mountChildren(vnode.children, el);\n    }\n\n    // \u5904\u7406 props\n    if (props) {\n        for (const key in props) {\n            // todo\n            // \u9700\u8981\u8FC7\u6EE4\u6389vue\u81EA\u8EAB\u7528\u7684key\n            // \u6BD4\u5982\u751F\u547D\u5468\u671F\u76F8\u5173\u7684 key: beforeMount\u3001mounted\n            const nextVal = props[key];\n            hostPatchProp(el, key, null, nextVal);\n        }\n    }\n\n    // \u63D2\u5165\n    hostInsert(el, container, anchor);\n\n}\n\nfunction mountChildren(children, container) {\n    children.forEach((VNodeChild) => {\n        patch(null, VNodeChild, container);\n    });\n}\n\nfunction patchProps(oldProps, newPros, el) {\n    for (let key in newPros) {\n        hostPatchProp(el, key, oldProps, newPros[key]) // \u65B0\u7684\u76F4\u63A5\u8986\u76D6\u5C31\u884C\n    }\n    for (let key in oldProps) {\n        if (newPros[key] === null) { // \u65E7\u5C5E\u6027\u5220\u9664\n            hostPatchProp(el, key, oldProps[key], null)\n        }\n    }\n}\n\nfunction patchKeyedChildren(c1, c2, container) {\n    let i = 0;\n    const l2 = c2.length;\n    let e1 = c1.length - 1;\n    let e2 = l2 - 1;\n\n    // \u4F18\u5316\uFF1A\u628A\u524D\u9762\u76F8\u540C\u7684\u8282\u70B9\u5148\u5904\u7406\u6389\n    while (i <= e1 && i <= e2) {\n        const prevChild = c1[i];\n        const nextChild = c2[i];\n\n        if (!isSameVnode(prevChild, nextChild)) {\n            break;\n        }\n\n        patch(prevChild, nextChild, container);\n        i++;\n    }\n\n    // \u4F18\u5316\uFF1A\u628A\u540E\u9762\u76F8\u540C\u7684\u8282\u70B9\u5148\u5904\u7406\u6389\n    while (i <= e1 && i <= e2) {\n        // \u4ECE\u53F3\u5411\u5DE6\u53D6\u503C\n        const prevChild = c1[e1];\n        const nextChild = c2[e2];\n\n        if (!isSameVnode(prevChild, nextChild)) {\n            break;\n        }\n        patch(prevChild, nextChild, container);\n        e1--;\n        e2--;\n    }\n\n    // \u901A\u8FC7 i\uFF0Ce1\uFF0Ce2\uFF0C\u786E\u5B9A\u51FA\u73B0\u7684\u65B0\u8282\u70B9\uFF0C\u6216\u88AB\u5220\u9664\u7684\u8282\u70B9\n    // \u8282\u70B9\u65B0\u589E\n    if (i > e1 && i <= e2) {\n        const nextPos = e2 + 1; // e2 \u6709\u79FB\u52A8\u8BF4\u660E\u662F\u5F80\u524D\u9762\u63D2\u5165\n        const anchor = nextPos < l2 ? c2[nextPos].el : null;\n        while (i <= e2) {\n            patch(null, c2[i], container, anchor);\n            i++;\n        }\n    } else if (i > e2 && i <= e1) {\n        // \u8FD9\u79CD\u60C5\u51B5\u7684\u8BDD\u8BF4\u660E\u65B0\u8282\u70B9\u7684\u6570\u91CF\u662F\u5C0F\u4E8E\u65E7\u8282\u70B9\u7684\u6570\u91CF\u7684\n        // \u90A3\u4E48\u6211\u4EEC\u5C31\u9700\u8981\u628A\u591A\u4F59\u7684\u5220\u9664\n        while (i <= e1) {\n            console.log(`\u9700\u8981\u5220\u9664\u5F53\u524D\u7684 vnode: ${c1[i].key}`);\n            hostRemove(c1[i].el);\n            i++;\n        }\n    } else {\n        // \u5DE6\u53F3\u4E24\u8FB9\u6BD4\u5BF9\u5B8C\u4E86\uFF0C\u4E2D\u95F4\u90E8\u5206\u53EF\u80FD\u53D1\u751F\u4E86\u4E71\u5E8F\u6216\u8005\u589E\u5220\n        // \u8FD9\u91CC\u8981\u505A\u7684\u5176\u5B9E\u662F\u8C03\u6362\u4F4D\u7F6E\u6216\u8005\u589E\u5220\u8282\u70B9\n\n        let s1 = i;\n        let s2 = i;\n        const keyToNewIndexMap = new Map(); // \u5EFA\u7ACB\u65B0\u8282\u70B9key\u4E0E\u5F53\u524D\u4F4D\u7F6E\u7684\u6620\u5C04\n        for (let i = s2; i <= e2; i++) {\n            const nextChild = c2[i];\n            keyToNewIndexMap.set(nextChild.key, i);\n        }\n\n        let patched = 0;\n        // \u9700\u8981\u5904\u7406\u65B0\u8282\u70B9\u7684\u6570\u91CF\n        const toBePatched = e2 - s2 + 1;\n\n        // \u5EFA\u7ACB\u65B0\u7684\u8282\u70B9\u4F4D\u7F6E\u548C\u65E7\u8282\u70B9\u4F4D\u7F6E\u7684\u6620\u5C04\u5173\u7CFB\n        const newIndexToOldIndexMap = new Array(toBePatched).fill(0);\n\n        // \u904D\u5386\u8001\u8282\u70B9\n        // 1. \u8001\u8282\u70B9\u6CA1\u6709\uFF0C\u800C\u65B0\u8282\u70B9\u6709 -> \u589E\u52A0\u8282\u70B9\n        // 2. \u9700\u8981\u627E\u51FA\u8001\u8282\u70B9\u6709\uFF0C\u800C\u65B0\u8282\u70B9\u6CA1\u6709\u7684 -> \u9700\u8981\u628A\u8FD9\u4E2A\u8282\u70B9\u5220\u9664\u6389\n        // 3. \u65B0\u8001\u8282\u70B9\u90FD\u6709\u7684\uFF0C\u2014> \u9700\u8981 patch\n        for (i = s1; i <= e1; i++) {\n            const prevChild = c1[i];\n\n            // \u5728\u6BD4\u5BF9\u5B8C\u65B0\u8282\u70B9\u540E\uFF0C\u5982\u679C\u8001\u7684\u8282\u70B9\u4ECD\u6709\u5269\u4F59\uFF0C\u90A3\u4E48\u8FD9\u91CC\u8001\u8282\u70B9\u76F4\u63A5\u5220\u9664\u5373\u53EF\n            if (patched >= toBePatched) {\n                hostRemove(prevChild.el);\n                continue;\n            }\n\n            let newIndex;\n            if (prevChild.key != null) {\n                // \u8FD9\u91CC\u5C31\u53EF\u4EE5\u901A\u8FC7key\u5FEB\u901F\u7684\u67E5\u627E\u4E86\uFF0C \u770B\u770B\u5728\u65B0\u7684\u91CC\u9762\u8FD9\u4E2A\u8282\u70B9\u5B58\u5728\u4E0D\u5B58\u5728\n                newIndex = keyToNewIndexMap.get(prevChild.key);\n            } else {\n                // \u5982\u679C\u6CA1key \u7684\u8BDD\uFF0C\u90A3\u4E48\u53EA\u80FD\u662F\u904D\u5386\u6240\u6709\u7684\u65B0\u8282\u70B9\u6765\u786E\u5B9A\u5F53\u524D\u8282\u70B9\u5B58\u5728\u4E0D\u5B58\u5728\u4E86\n                // \u65F6\u95F4\u590D\u6742\u5EA6O(n)\n                for (let j = s2; j <= e2; j++) {\n                    if (isSameVnode(prevChild, c2[j])) {\n                        newIndex = j;\n                        break;\n                    }\n                }\n            }\n\n            // \u56E0\u4E3A\u6709\u53EF\u80FD nextIndex \u7684\u503C\u4E3A0\uFF080\u4E5F\u662F\u6B63\u5E38\u503C\uFF09\n            // \u6240\u4EE5\u9700\u8981\u901A\u8FC7\u503C\u662F\u4E0D\u662F undefined \u6216\u8005 null \u6765\u5224\u65AD\n            if (newIndex === undefined) {\n                // \u5F53\u524D\u8282\u70B9\u7684key \u4E0D\u5B58\u5728\u4E8E newChildren \u4E2D\uFF0C\u9700\u8981\u628A\u5F53\u524D\u8282\u70B9\u7ED9\u5220\u9664\u6389\n                hostRemove(prevChild.el);\n            } else {\n                // \u65B0\u8001\u8282\u70B9\u90FD\u5B58\u5728\n                // \u628A\u65B0\u8282\u70B9\u7684\u7D22\u5F15\u548C\u8001\u7684\u8282\u70B9\u7684\u7D22\u5F15\u5EFA\u7ACB\u6620\u5C04\u5173\u7CFB\n                // i + 1 \u662F\u56E0\u4E3A\u6211\u4EEC\u628A 0 \u8BA4\u4E3A\u662F\u65B0\u8282\u70B9\uFF0C\u5728\u4E0B\u9762\u5224\u65AD\u4E2D\u503C\u4E3A 0 \u65F6\u4F1A\u521B\u5EFA\u65B0\u8282\u70B9\n                newIndexToOldIndexMap[newIndex - s2] = i + 1;\n\n                patch(prevChild, c2[newIndex], container, null); // \u8FD9\u91CC\u53EA\u80FD\u4FEE\u6539 props \u548C\u503C\u7684\u53D8\u5316\uFF0C\u5E76\u4E0D\u80FD\u5904\u7406\u4F4D\u7F6E\u7684\u53D8\u5316\n                patched++;\n            }\n        }\n\n        // \u83B7\u53D6\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\n        let increment = getSequence(newIndexToOldIndexMap)\n        let j = increment.length - 1\n        console.log('increment---', increment);\n        \n\n        // \u5904\u7406\u9700\u8981\u79FB\u52A8\u7684\u4F4D\u7F6E\n        // \u4ECE\u540E\u5F00\u59CB\u5904\u7406\uFF0C\u4ECE\u540E\u5F80\u524D\u63D2\u5165(node.insertBefore)\n        for (let i = toBePatched - 1; i >= 0; i--) {\n            let index = i + s2\n            let current = c2[index]\n            let anchor = index + 1 < c2.length ? c2[index + 1].el : null;\n            if (newIndexToOldIndexMap[i] === 0) { // \u6CA1\u6709\u6620\u5C04\u5173\u7CFB\u8BF4\u660E\u662F\u65B0\u8282\u70B9\uFF0C\u76F4\u63A5\u521B\u5EFA\n                patch(null, current, container, anchor)\n            } else { // \u9700\u8981\u79FB\u52A8\u4F4D\u7F6E\u7684\u8282\u70B9\n                if (i != increment[j]) {\n                    hostInsert(current.el, container, anchor)\n                } else {\n                    j--\n                }\n            }\n        }\n\n    }\n}\n\nfunction updateElement(n1, n2) {\n    let el = n2.el = n1.el // n2 \u590D\u7528 n1 \u8282\u70B9\n\n    let oldProps = n1.props || {};\n    let newPros = n2.props || {};\n    patchProps(oldProps, newPros, el); // \u5BF9\u6BD4 props\n    patchChildren(n1, n2, el); // \u5BF9\u6BD4 children\n}\n\nfunction patchChildren(n1, n2, container) {\n    const { shapeFlag: prevShapeFlag, children: c1 } = n1;\n    const { shapeFlag, children: c2 } = n2;\n\n    // \u4E3A\u4E86\u65B9\u4FBF\u7406\u89E3\uFF1A\u8FD9\u53EA\u5904\u7406\u6587\u672C\u548C\u6587\u672C\u6BD4\u5BF9\u548C\u5B69\u5B50\u8282\u70B9\u548C\u5B69\u5B50\u8282\u70B9\u6BD4\u5BF9\u7684\u60C5\u51B5\n    // \u6CA1\u5199\u7684\u60C5\u51B5\uFF1A\u6587\u672C\u6BD4\u6570\u7EC4\uFF0C\u6587\u672C\u6BD4\u7A7A\uFF0C\u6570\u7EC4\u6BD4\u6587\u672C\uFF0C\u6570\u7EC4\u6BD4\u7A7A\n    if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\n\n        if (c2 !== c1) {\n            hostSetElementText(container, c2 as string);\n        }\n    }\n    else {\n        // \u6BD4\u5BF9\u90FD\u6709\u5B69\u5B50\u8282\u70B9\u7684\u60C5\u51B5\n        if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n            if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n                patchKeyedChildren(c1, c2, container);\n            }\n        }\n    }\n}\n\nfunction getSequence(arr: number[]): number[] {\n    const p = arr.slice();\n    const result = [0];\n    let i, j, u, v, c;\n    const len = arr.length;\n    for (i = 0; i < len; i++) {\n        const arrI = arr[i];\n        if (arrI !== 0) {\n            j = result[result.length - 1];\n            if (arr[j] < arrI) {\n                p[i] = j;\n                result.push(i);\n                continue;\n            }\n            u = 0;\n            v = result.length - 1;\n            while (u < v) {\n                c = (u + v) >> 1;\n                if (arr[result[c]] < arrI) {\n                    u = c + 1;\n                } else {\n                    v = c;\n                }\n            }\n            if (arrI < arr[result[u]]) {\n                if (u > 0) {\n                    p[i] = result[u - 1];\n                }\n                result[u] = i;\n            }\n        }\n    }\n    u = result.length;\n    v = result[u - 1];\n    while (u-- > 0) {\n        result[u] = v;\n        v = p[v];\n    }\n    return result;\n}\n"],
  "mappings": "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",
  "names": []
}
